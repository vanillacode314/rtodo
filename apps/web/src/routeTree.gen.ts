/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/solid-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as authAuthRouteImport } from './routes/(auth)/auth'
import { Route as appSettingsRouteImport } from './routes/(app)/settings'
import { Route as appTasksCreateRouteImport } from './routes/(app)/tasks/create'
import { Route as appHomeExplorerRouteImport } from './routes/(app)/home/_explorer'
import { Route as authAuthSigninIndexRouteImport } from './routes/(auth)/auth/signin/index'
import { Route as authAuthSigninMagicLinkRouteImport } from './routes/(auth)/auth/signin/magic-link'
import { Route as appHomeExplorerSplatRouteImport } from './routes/(app)/home/_explorer/$'

const appHomeRouteImport = createFileRoute('/(app)/home')()

const appHomeRoute = appHomeRouteImport.update({
  id: '/(app)/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const appIndexRoute = appIndexRouteImport.update({
  id: '/(app)/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthRoute = authAuthRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsRoute = appSettingsRouteImport.update({
  id: '/(app)/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const appTasksCreateRoute = appTasksCreateRouteImport.update({
  id: '/(app)/tasks/create',
  path: '/tasks/create',
  getParentRoute: () => rootRouteImport,
} as any)
const appHomeExplorerRoute = appHomeExplorerRouteImport.update({
  id: '/_explorer',
  getParentRoute: () => appHomeRoute,
} as any)
const authAuthSigninIndexRoute = authAuthSigninIndexRouteImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => authAuthRoute,
} as any)
const authAuthSigninMagicLinkRoute = authAuthSigninMagicLinkRouteImport.update({
  id: '/signin/magic-link',
  path: '/signin/magic-link',
  getParentRoute: () => authAuthRoute,
} as any)
const appHomeExplorerSplatRoute = appHomeExplorerSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => appHomeExplorerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/settings': typeof appSettingsRoute
  '/auth': typeof authAuthRouteWithChildren
  '/': typeof appIndexRoute
  '/home': typeof appHomeExplorerRouteWithChildren
  '/tasks/create': typeof appTasksCreateRoute
  '/home/$': typeof appHomeExplorerSplatRoute
  '/auth/signin/magic-link': typeof authAuthSigninMagicLinkRoute
  '/auth/signin': typeof authAuthSigninIndexRoute
}
export interface FileRoutesByTo {
  '/settings': typeof appSettingsRoute
  '/auth': typeof authAuthRouteWithChildren
  '/': typeof appIndexRoute
  '/home': typeof appHomeExplorerRouteWithChildren
  '/tasks/create': typeof appTasksCreateRoute
  '/home/$': typeof appHomeExplorerSplatRoute
  '/auth/signin/magic-link': typeof authAuthSigninMagicLinkRoute
  '/auth/signin': typeof authAuthSigninIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)/settings': typeof appSettingsRoute
  '/(auth)/auth': typeof authAuthRouteWithChildren
  '/(app)/': typeof appIndexRoute
  '/(app)/home': typeof appHomeRouteWithChildren
  '/(app)/home/_explorer': typeof appHomeExplorerRouteWithChildren
  '/(app)/tasks/create': typeof appTasksCreateRoute
  '/(app)/home/_explorer/$': typeof appHomeExplorerSplatRoute
  '/(auth)/auth/signin/magic-link': typeof authAuthSigninMagicLinkRoute
  '/(auth)/auth/signin/': typeof authAuthSigninIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/settings'
    | '/auth'
    | '/'
    | '/home'
    | '/tasks/create'
    | '/home/$'
    | '/auth/signin/magic-link'
    | '/auth/signin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/auth'
    | '/'
    | '/home'
    | '/tasks/create'
    | '/home/$'
    | '/auth/signin/magic-link'
    | '/auth/signin'
  id:
    | '__root__'
    | '/(app)/settings'
    | '/(auth)/auth'
    | '/(app)/'
    | '/(app)/home'
    | '/(app)/home/_explorer'
    | '/(app)/tasks/create'
    | '/(app)/home/_explorer/$'
    | '/(auth)/auth/signin/magic-link'
    | '/(auth)/auth/signin/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appSettingsRoute: typeof appSettingsRoute
  authAuthRoute: typeof authAuthRouteWithChildren
  appIndexRoute: typeof appIndexRoute
  appHomeRoute: typeof appHomeRouteWithChildren
  appTasksCreateRoute: typeof appTasksCreateRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/(app)/home': {
      id: '/(app)/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appHomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings': {
      id: '/(app)/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/tasks/create': {
      id: '/(app)/tasks/create'
      path: '/tasks/create'
      fullPath: '/tasks/create'
      preLoaderRoute: typeof appTasksCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/home/_explorer': {
      id: '/(app)/home/_explorer'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appHomeExplorerRouteImport
      parentRoute: typeof appHomeRoute
    }
    '/(auth)/auth/signin/': {
      id: '/(auth)/auth/signin/'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof authAuthSigninIndexRouteImport
      parentRoute: typeof authAuthRoute
    }
    '/(auth)/auth/signin/magic-link': {
      id: '/(auth)/auth/signin/magic-link'
      path: '/signin/magic-link'
      fullPath: '/auth/signin/magic-link'
      preLoaderRoute: typeof authAuthSigninMagicLinkRouteImport
      parentRoute: typeof authAuthRoute
    }
    '/(app)/home/_explorer/$': {
      id: '/(app)/home/_explorer/$'
      path: '/$'
      fullPath: '/home/$'
      preLoaderRoute: typeof appHomeExplorerSplatRouteImport
      parentRoute: typeof appHomeExplorerRoute
    }
  }
}

interface authAuthRouteChildren {
  authAuthSigninMagicLinkRoute: typeof authAuthSigninMagicLinkRoute
  authAuthSigninIndexRoute: typeof authAuthSigninIndexRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthSigninMagicLinkRoute: authAuthSigninMagicLinkRoute,
  authAuthSigninIndexRoute: authAuthSigninIndexRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface appHomeExplorerRouteChildren {
  appHomeExplorerSplatRoute: typeof appHomeExplorerSplatRoute
}

const appHomeExplorerRouteChildren: appHomeExplorerRouteChildren = {
  appHomeExplorerSplatRoute: appHomeExplorerSplatRoute,
}

const appHomeExplorerRouteWithChildren = appHomeExplorerRoute._addFileChildren(
  appHomeExplorerRouteChildren,
)

interface appHomeRouteChildren {
  appHomeExplorerRoute: typeof appHomeExplorerRouteWithChildren
}

const appHomeRouteChildren: appHomeRouteChildren = {
  appHomeExplorerRoute: appHomeExplorerRouteWithChildren,
}

const appHomeRouteWithChildren =
  appHomeRoute._addFileChildren(appHomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  appSettingsRoute: appSettingsRoute,
  authAuthRoute: authAuthRouteWithChildren,
  appIndexRoute: appIndexRoute,
  appHomeRoute: appHomeRouteWithChildren,
  appTasksCreateRoute: appTasksCreateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
